from telethon import Button

from handlers import SPOTIFY


class Artist:
    def __init__(self, artist_id):
        self.spotify = SPOTIFY.artist(artist_id)
        self.id = self.spotify['id']
        self.artist_name = self.spotify['name']
        self.followers_count = self.spotify['followers']['total']
        self.genres = self.spotify['genres']
        self.uri = self.spotify['uri']
        self.artist_profile = self.spotify['images'][0]['url']
        self.spotify_link = self.spotify['external_urls']['handlers']

    async def artist_telethon_template(self):
        message = f'''
üë§ –ê—Ä—Ç–∏—Å—Ç : `{self.artist_name}`
ü©∑ –ü–æ–¥–ø–∏—Å—á–∏–∫–∏ : `{self.followers_count}`
üé∂ –ñ–∞–Ω—Ä—ã : `{self.genres}`

[–°–∫–∞—á–∞—Ç—å –∞–≤–∞—Ç–∞—Ä]({self.artist_profile})
[ID]({self.uri})
            '''

        buttons = [[Button.inline(f'üñºÔ∏è –ê–≤–∞—Ç–∞—Ä –∞—Ä—Ç–∏—Å—Ç–∞', data=f"download_artist_image:{self.id}")],
                   [Button.inline(f"üëÄ –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç—Ä–µ–∫–∏", data=f"artist_top_tracks:{self.id}")],
                   [Button.inline(f'üßë‚Äçüé® –ê–ª—å–±–æ–º—ã –∞—Ä—Ç–∏—Å—Ç–∞', data=f"artist_albums:{self.id}")],
                   [Button.url(f'üéµ –°–ª—É—à–∞—Ç—å –≤ Spotify', self.spotify_link)],
                   ]

        return message, buttons

    async def artist_top_tracks_template(self):
        top_tracks = SPOTIFY.artist_top_tracks(self.id)
        buttons = [[Button.inline(f"{track['name']} - {track['artists'][0]['name']}",
                                 data=f"song:{track['id']}")] for track in top_tracks['tracks']]
        return self.artist_name, buttons

    async def artist_albums_template(self):
        top_tracks = SPOTIFY.artist_albums(self.id)
        buttons = [[Button.inline(f"{album['name']} - {album['artists'][0]['name']}",
                                 data=f"artist:{album['id']}")] for album in top_tracks['items']]
        return self.artist_name, buttons